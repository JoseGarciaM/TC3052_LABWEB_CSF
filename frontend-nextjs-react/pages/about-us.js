import Head from 'next/head';
import {useRouter} from 'next/router';
import Image from 'next/image';
import Landing from 'layouts/Landing';
import Section from 'components/ui/Section';
import BlockContent from '@sanity/block-content-to-react';
import {getAboutUsData, urlForImage} from 'lib/sanity/groq';

export default function AboutUs({aboutUsData}) {
  const router = useRouter()
  const {locale} = router;
  return (
    <Landing>
      {aboutUsData && (
        <>
          {aboutUsData.map((data) => (
            <>
              <Head key={data._id}>
                {locale === "en" && <title>{data.SEOTitle.en}</title>}
                {locale === "es" && <title>{data.SEOTitle.es}</title>}
                <meta name="description" content="Generated by create next app" />
              </Head>
              <Section className="pt-28 lg:pt-36 h-144 lg:h-screen relative mb-0 md:mb-40">
                <div className="h-full w-full relative z-20 flex justify-center items-center">
                  <div className="prose prose-xl lg:prose-2xl text-center text-white">
                    <h1 className="title-4xl-7xl leading-none text-white">
                      {locale === "en" && <>{data.landingTitle.en}</>}
                      {locale === "es" && <>{data.landingTitle.es}</>}
                    </h1>
                    {locale === "en" && <BlockContent blocks={data.landingBody.en} />}
                    {locale === "es" && <BlockContent blocks={data.landingBody.es} />}
                  </div>
                </div>
                <div className="absolute h-full w-full z-10 inset-0 overflow-hidden filter contrast-50">
                  {data.landingImage && (
                    <Image
                      src={urlForImage(data.landingImage).url()}
                      alt={data.landingTitle.en}
                      key={data.landingTitle.en}
                      layout="fill"
                      objectFit="cover"
                    />
                  )}
                </div>
              </Section>
              <Section>
                <Section.Content
                  fullWidth={true}
                  paddingX={false}
                  className="flex flex-col-reverse md:flex-row-reverse mb-0 md:mb-40"
                >
                  <div className="h-96 md:h-160 lg:h-192 relative overflow-hidden md:w-3/12">
                    {data.whoWeAreImage && (
                      <Image
                        src={urlForImage(data.whoWeAreImage).url()}
                        alt={data.whoWeAreTitle.en}
                        key={data.whoWeAreTitle.en}
                        layout="fill"
                        objectFit="cover"
                      />
                    )}
                  </div>
                  <div className="relative md:w-9/12 py-16 sm:py-20 md:py-24 lg:py-32 px-4-safe md:px-10-safe lg:px-36-safe flex flex-col items-start">
                    <div className="prose prose-lg lg:prose-xl">
                      <h2 className="title-4xl-7xl leading-none">
                        {locale === "en" && <>{data.whoWeAreTitle.en}</>}
                        {locale === "es" && <>{data.whoWeAreTitle.es}</>}
                      </h2>
                      {locale === "en" && <BlockContent blocks={data.whoWeAreBody.en} />}
                      {locale === "es" && <BlockContent blocks={data.whoWeAreBody.es} />}
                    </div>
                  </div>
                </Section.Content>
              </Section>
              <Section>
                <Section.Content
                  fullWidth={true}
                  paddingX={false}
                  className="flex flex-col-reverse md:flex-row mb-0 md:mb-40"
                >
                  <div className="h-96 md:h-160 lg:h-192 relative overflow-hidden md:w-5/12">
                    {data.philosohyImage && (
                      <Image
                        src={urlForImage(data.philosohyImage).url()}
                        alt={data.philosohyTitle.en}
                        key={data.philosohyTitle.en}
                        layout="fill"
                        objectFit="cover"
                      />
                    )}
                  </div>
                  <div className="relative md:w-7/12 py-16 sm:py-20 md:py-24 lg:py-32 px-4-safe md:px-10-safe lg:px-36-safe flex flex-col items-start">
                    <div className="prose prose-lg lg:prose-xl">
                      <h2 className="title-4xl-7xl leading-none">
                        {locale === "en" && <>{data.philosohyTitle.en}</>}
                        {locale === "es" && <>{data.philosohyTitle.es}</>}
                      </h2>
                      {locale === "en" && <BlockContent blocks={data.philosohyBody.en} />}
                      {locale === "es" && <BlockContent blocks={data.philosohyBody.es} />}
                    </div>
                  </div>
                </Section.Content>
              </Section>
              <Section>
                <Section.Content
                  fullWidth={true}
                  paddingX={false}
                  className="flex flex-col-reverse md:flex-row-reverse mb-0 md:mb-40"
                >
                  <div className="h-96 md:h-160 lg:h-192 relative overflow-hidden md:w-4/12">
                    {data.sustainabilityImage && (
                      <Image
                        src={urlForImage(data.sustainabilityImage).url()}
                        alt={data.sustainabilityTitle.en}
                        key={data.sustainabilityTitle.en}
                        layout="fill"
                        objectFit="cover"
                      />
                    )}
                  </div>
                  <div className="relative md:w-8/12 py-16 sm:py-20 md:py-24 lg:py-32 px-4-safe md:px-10-safe lg:px-36-safe flex flex-col items-start">
                    <div className="prose prose-lg lg:prose-xl">
                      <h2 className="title-4xl-7xl leading-none">
                        {locale === "en" && <>{data.sustainabilityTitle.en}</>}
                        {locale === "es" && <>{data.sustainabilityTitle.es}</>}
                      </h2>
                      {locale === "en" && <BlockContent blocks={data.sustainabilityBody.en} />}
                      {locale === "es" && <BlockContent blocks={data.sustainabilityBody.es} />}
                    </div>
                  </div>
                </Section.Content>
              </Section>
            </>
          ))}
        </>
      )}
    </Landing>
  )
}

export async function getStaticProps() {
  const aboutUsData = await getAboutUsData();

  return {
    props: {
      aboutUsData,
    },
    revalidate: 1,
  };
}
