import Head from 'next/head';
import {useRouter} from 'next/router';
import Link from 'next/link';
import Image from 'next/image';
import cx from 'classnames';
import Landing from 'layouts/Landing';
import Section from 'components/ui/Section';
import BlockContent from '@sanity/block-content-to-react';
import {getProductData, getProductsList, urlForImage} from 'lib/sanity/groq';

export default function Product({productData}) {
  const router = useRouter()
  const {locale} = router;
  return (
    <Landing>
      {productData && (
        <>
          {productData.map((data) => (
            <>
              <Head key={data._id}>
                {locale === "en" && <title>{data.SEOTitle.en}</title>}
                {locale === "es" && <title>{data.SEOTitle.es}</title>}
                <meta name="description" content="Generated by create next app" />
              </Head>
              <Section className="mt-28 lg:mt-36 py-16 sm:py-20 md:py-28 lg:py-36">
                <Section.Content>
                  <div className="flex flex-col md:flex-row-reverse md:justify-between">
                    <div className="md:w-1/2 flex flex-col md:items-start">
                      <div className="prose prose-xl text-center md:text-left">
                        <h1 className="title-4xl-7xl leading-none">
                          {locale === "en" && <>{data.productName.en}</>}
                          {locale === "es" && <>{data.productName.es}</>}
                        </h1>
                        {locale === "en" && <BlockContent blocks={data.productBlurb.en} />}
                        {locale === "es" && <BlockContent blocks={data.productBlurb.es} />}
                      </div>
                      <div className="my-8 text-center md:text-left">
                        {locale === "en" && <BlockContent blocks={data.productDescription.en} />}
                        {locale === "es" && <BlockContent blocks={data.productDescription.es} />}
                      </div>
                      <Link href="/">
                        <a 
                          aria-label="hello"
                          className={cx(
                            'btn-lg btn-primary btn-flex btn-px-sm sm:btn-px md:btn-px-lg lg:btn-px-2xl',
                            'uppercase tracking-wider',
                            'mt-8'
                          )}
                        >
                          {locale === "en" && <>{data.productCTA.en}</>}
                          {locale === "es" && <>{data.productCTA.es}</>}
                        </a>
                      </Link>
                    </div>
                    <div className="md:w-5/12 relative overflow-hidden h-120 md:h-160 mt-20 md:mt-0">
                      <Image
                        src={urlForImage(data.mainImage).url()}
                        alt="lol"
                        layout="fill"
                        objectFit="cover"
                      />
                    </div>
                  </div>
                </Section.Content>
                <Section.Content className="mt-28 lg:mt-36">
                  <div className="md:w-8/12 prose prose-xl">
                    {locale === "en" && <BlockContent blocks={data.productBody.en} />}
                    {locale === "es" && <BlockContent blocks={data.productBody.es} />}
                  </div>
                </Section.Content>
              </Section>
            </>
          ))}
        </>
      )}
    </Landing>
  )
}

export async function getStaticProps({params}) {
  const productData = await getProductData(params.slug);
  return {
    props: {
      productData
    },
    revalidate: 1,
  };
}

export async function getStaticPaths() {
  const products = await getProductsList();
  const paths = products?.map((product) => ({
    params: {
      slug: product.slug,
    },
  }));
  return {
    paths,
    fallback: true,
  };
}
