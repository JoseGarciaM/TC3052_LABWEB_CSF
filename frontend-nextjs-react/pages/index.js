import Head from 'next/head';
import {useRouter} from 'next/router';
import Image from 'next/image';
import Link from 'next/link';
import cx from 'classnames';
import Landing from 'layouts/Landing';
import Section from 'components/ui/Section';
import {LandingHome} from 'components/ui/Carousel';
import {ProductCard} from 'components/ui/Product';
import {CocktailCard} from 'components/ui/Cocktail';
import BlockContent from '@sanity/block-content-to-react';
import {getHomeData, urlForImage} from 'lib/sanity/groq';

export default function Home({homeData}) {
  const router = useRouter()
  const {locale} = router;
  return (
    <Landing>
      {homeData && (
        <>
          {homeData.map((data) => (
            <>
              <Head key={data._id}>
                {locale === "en" && <title>{data.SEOTitle.en}</title>}
                {locale === "es" && <title>{data.SEOTitle.es}</title>}
                <meta name="description" content="Generated by create next app" />
              </Head>
              <Section className="pt-28 lg:pt-36 h-144 lg:h-screen">
                <LandingHome slides={data.landingSlides} />
              </Section>
              <Section className="py-16 sm:py-20 md:py-28 lg:py-36">
                <Section.Content>
                  <div className="prose prose-lg lg:prose-xl text-center mx-auto">
                    <h2 className="title-4xl-7xl leading-none">
                      {locale === "en" && <>{data.productsTitle.en}</>}
                      {locale === "es" && <>{data.productsTitle.es}</>}
                    </h2>
                    {locale === "en" && <BlockContent blocks={data.productsBody.en} />}
                    {locale === "es" && <BlockContent blocks={data.productsBody.es} />}
                  </div>
                  {data.productsList && (
                    <div className="mt-20 lg:mt-24 mb-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-16">
                      {data.productsList.map((product) => (
                        <ProductCard key={product.title} slug={product.slug}>
                          <ProductCard.Photo url={product.mainImage} />
                          <ProductCard.Information 
                            title={locale === "en" ? product.productName.en : 
                              locale === "es" ? product.productName.es : null
                            }
                          />
                        </ProductCard>
                      ))}
                    </div>
                  )}
                </Section.Content>
              </Section>
              <Section>
                <Section.Content
                  fullWidth={true}
                  paddingX={false}
                  className="flex flex-col-reverse md:flex-row"
                >
                  <div className="h-96 md:h-160 lg:h-192 relative overflow-hidden md:w-3/12">
                    {data.qualitiesImage && (
                      <Image
                        src={urlForImage(data.qualitiesImage).url()}
                        alt={data.qualitiesTitle.en}
                        key={data.qualitiesTitle.en}
                        layout="fill"
                        objectFit="cover"
                      />
                    )}
                  </div>
                  <div className="relative md:w-9/12 py-16 sm:py-20 md:py-24 lg:py-32 px-4-safe md:px-10-safe lg:px-36-safe flex flex-col items-start">
                    <div className="prose prose-lg lg:prose-xl">
                      <h2 className="title-4xl-7xl leading-none">
                        {locale === "en" && <>{data.qualitiesTitle.en}</>}
                        {locale === "es" && <>{data.qualitiesTitle.es}</>}
                      </h2>
                      {locale === "en" && <BlockContent blocks={data.qualitiesBody.en} />}
                      {locale === "es" && <BlockContent blocks={data.qualitiesBody.es} />}
                    </div>
                    <Link href="/about-us">
                      <a 
                        aria-label="hello"
                        className={cx(
                          'btn lg:btn-lg btn-primary btn-flex btn-px-sm sm:btn-px md:btn-px-lg lg:btn-px-2xl',
                          'uppercase tracking-wider',
                          'mt-8'
                        )}
                      >
                        {locale === "en" && <>{data.qualitiesCTA.en}</>}
                        {locale === "es" && <>{data.qualitiesCTA.es}</>}
                      </a>
                    </Link>
                  </div>
                </Section.Content>
              </Section>
              <Section className="py-16 sm:py-20 md:py-28 lg:py-36">
                <Section.Content>
                  <div className="title-3xl-5xl prose mx-auto leading-tight font-serif">
                    {locale === "en" && <BlockContent blocks={data.soloBody.en} />}
                    {locale === "es" && <BlockContent blocks={data.soloBody.es} />}
                  </div>
                </Section.Content>
              </Section>
              <Section className="pb-16 sm:pb-20 md:pb-28 lg:pb-36">
                <Section.Content>
                  <div className="prose prose-lg lg:prose-xl text-center mx-auto">
                    <h2 className="title-4xl-7xl leading-none">
                      {locale === "en" && <>{data.cocktailsTitle.en}</>}
                      {locale === "es" && <>{data.cocktailsTitle.es}</>}
                    </h2>
                  </div>
                  {data.cocktailsList && (
                    <div className="mt-20 lg:mt-24 mb-12 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-16">
                      {data.cocktailsList.map((cocktail) => (
                        <CocktailCard key={cocktail.title} slug={cocktail.slug}>
                          <CocktailCard.Photo url={cocktail.mainImage} />
                          <CocktailCard.Information 
                            title={locale === "en" ? cocktail.cocktailName.en : 
                              locale === "es" ? cocktail.cocktailName.es : null
                            }
                            mainIngridients={locale === "en" ? cocktail.cocktailMainIngridients.en : 
                              locale === "es" ? cocktail.cocktailMainIngridients.es : null
                            }
                          />
                        </CocktailCard>
                      ))}
                    </div>
                  )}
                </Section.Content>
              </Section>
            </>
          ))}
        </>
      )}
    </Landing>
  )
}

export async function getStaticProps() {
  const homeData = await getHomeData();

  return {
    props: {
      homeData,
    },
    revalidate: 1,
  };
}
